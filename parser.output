State 122 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list function_list main_function

    2 primary_expression: IDENTIFIER
    3                   | IDENTIFIER '(' argument_list_opt ')'
    4                   | HEX_CONSTANT
    5                   | INT_CONSTANT
    6                   | CHAR_CONSTANT
    7                   | STRING_LITERAL
    8                   | '(' expression ')'

    9 postfix_expression: primary_expression
   10                   | postfix_expression '[' expression ']'

   11 argument_list_opt: %empty
   12                  | argument_list

   13 argument_list: expression
   14              | expression ',' argument_list

   15 unary_expression: postfix_expression
   16                 | unary_operator unary_expression
   17                 | '(' type ')' unary_expression

   18 unary_operator: '&'
   19               | '*'
   20               | '-'
   21               | '!'

   22 expression: unary_expression
   23           | expression binary_operator unary_expression

   24 binary_operator: '*'
   25                | '/'
   26                | '%'
   27                | '+'
   28                | '-'
   29                | '<'
   30                | '>'
   31                | LE_OP
   32                | GE_OP
   33                | EQ_OP
   34                | NE_OP
   35                | AND_OP
   36                | OR_OP

   37 assignment_statement: expression '=' expression ';'

   38 if_statement: IF '(' expression ')' statement
   39             | IF '(' expression ')' statement ELSE statement

   40 while_statement: WHILE '(' expression ')' statement

   41 compound_statement: '{' declaration_list statement_list '}'

   42 statement: assignment_statement
   43          | if_statement
   44          | while_statement
   45          | compound_statement

   46 statement_list: %empty
   47               | statement statement_list

   48 type: INT
   49     | CHAR
   50     | POINTER '<' type '>'
   51     | ARRAY '<' INT_CONSTANT ',' type '>'
   52     | FUNCTION '(' type_list_opt ')' ARROW type

   53 type_list_opt: %empty
   54              | type_list

   55 type_list: type
   56          | type ',' type_list

   57 declaration: type IDENTIFIER ';'

   58 declaration_list: %empty
   59                 | declaration declaration_list

   60 parameter_list_opt: %empty
   61                   | parameter_list

   62 parameter_list: IDENTIFIER
   63               | IDENTIFIER ',' parameter_list

   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' type '{' declaration_list statement_list RETURN expression ';' '}'

   65 function_list: %empty
   66              | function function_list

   67 main_function: MAIN '{' declaration_list statement_list RETURN expression ';' '}'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 21
'%' (37) 26
'&' (38) 18
'(' (40) 3 8 17 38 39 40 52 64
')' (41) 3 8 17 38 39 40 52 64
'*' (42) 19 24
'+' (43) 27
',' (44) 14 51 56 63
'-' (45) 20 28
'/' (47) 25
':' (58) 64
';' (59) 37 57 64 67
'<' (60) 29 50 51
'=' (61) 37
'>' (62) 30 50 51
'[' (91) 10
']' (93) 10
'{' (123) 41 64 67
'}' (125) 41 64 67
error (256)
IDENTIFIER (258) 2 3 57 62 63 64
HEX_CONSTANT (259) 4
INT_CONSTANT (260) 5 51
CHAR_CONSTANT (261) 6
STRING_LITERAL (262) 7
LE_OP (263) 31
GE_OP (264) 32
EQ_OP (265) 33
NE_OP (266) 34
AND_OP (267) 35
OR_OP (268) 36
CHAR (269) 49
INT (270) 48
ARRAY (271) 51
POINTER (272) 50
FUNCTION (273) 52
ARROW (274) 52
IF (275) 38 39
ELSE (276) 39
WHILE (277) 40
RETURN (278) 64 67
MAIN (279) 67


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
primary_expression (46)
    on left: 2 3 4 5 6 7 8, on right: 9
postfix_expression (47)
    on left: 9 10, on right: 10 15
argument_list_opt (48)
    on left: 11 12, on right: 3
argument_list (49)
    on left: 13 14, on right: 12 14
unary_expression (50)
    on left: 15 16 17, on right: 16 17 22 23
unary_operator (51)
    on left: 18 19 20 21, on right: 16
expression (52)
    on left: 22 23, on right: 8 10 13 14 23 37 38 39 40 64 67
binary_operator (53)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36, on right: 23
assignment_statement (54)
    on left: 37, on right: 42
if_statement (55)
    on left: 38 39, on right: 43
while_statement (56)
    on left: 40, on right: 44
compound_statement (57)
    on left: 41, on right: 45
statement (58)
    on left: 42 43 44 45, on right: 38 39 40 47
statement_list (59)
    on left: 46 47, on right: 41 47 64 67
type (60)
    on left: 48 49 50 51 52, on right: 17 50 51 52 55 56 57 64
type_list_opt (61)
    on left: 53 54, on right: 52
type_list (62)
    on left: 55 56, on right: 54 56
declaration (63)
    on left: 57, on right: 59
declaration_list (64)
    on left: 58 59, on right: 1 41 59 64 67
parameter_list_opt (65)
    on left: 60 61, on right: 64
parameter_list (66)
    on left: 62 63, on right: 61 63
function (67)
    on left: 64, on right: 66
function_list (68)
    on left: 65 66, on right: 1 66
main_function (69)
    on left: 67, on right: 1


State 0

    0 $accept: . program $end

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $default  reduce using rule 58 (declaration_list)

    program           go to state 6
    type              go to state 7
    declaration       go to state 8
    declaration_list  go to state 9


State 1

   49 type: CHAR .

    $default  reduce using rule 49 (type)


State 2

   48 type: INT .

    $default  reduce using rule 48 (type)


State 3

   51 type: ARRAY . '<' INT_CONSTANT ',' type '>'

    '<'  shift, and go to state 10


State 4

   50 type: POINTER . '<' type '>'

    '<'  shift, and go to state 11


State 5

   52 type: FUNCTION . '(' type_list_opt ')' ARROW type

    '('  shift, and go to state 12


State 6

    0 $accept: program . $end

    $end  shift, and go to state 13


State 7

   57 declaration: type . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 14


State 8

   59 declaration_list: declaration . declaration_list

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $default  reduce using rule 58 (declaration_list)

    type              go to state 7
    declaration       go to state 8
    declaration_list  go to state 15


State 9

    1 program: declaration_list . function_list main_function

    IDENTIFIER  shift, and go to state 16

    $default  reduce using rule 65 (function_list)

    function       go to state 17
    function_list  go to state 18


State 10

   51 type: ARRAY '<' . INT_CONSTANT ',' type '>'

    INT_CONSTANT  shift, and go to state 19


State 11

   50 type: POINTER '<' . type '>'

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    type  go to state 20


State 12

   52 type: FUNCTION '(' . type_list_opt ')' ARROW type

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $default  reduce using rule 53 (type_list_opt)

    type           go to state 21
    type_list_opt  go to state 22
    type_list      go to state 23


State 13

    0 $accept: program $end .

    $default  accept


State 14

   57 declaration: type IDENTIFIER . ';'

    ';'  shift, and go to state 24


State 15

   59 declaration_list: declaration declaration_list .

    $default  reduce using rule 59 (declaration_list)


State 16

   64 function: IDENTIFIER . '(' parameter_list_opt ')' ':' type '{' declaration_list statement_list RETURN expression ';' '}'

    '('  shift, and go to state 25


State 17

   66 function_list: function . function_list

    IDENTIFIER  shift, and go to state 16

    $default  reduce using rule 65 (function_list)

    function       go to state 17
    function_list  go to state 26


State 18

    1 program: declaration_list function_list . main_function

    MAIN  shift, and go to state 27

    main_function  go to state 28


State 19

   51 type: ARRAY '<' INT_CONSTANT . ',' type '>'

    ','  shift, and go to state 29


State 20

   50 type: POINTER '<' type . '>'

    '>'  shift, and go to state 30


State 21

   55 type_list: type .
   56          | type . ',' type_list

    ','  shift, and go to state 31

    $default  reduce using rule 55 (type_list)


State 22

   52 type: FUNCTION '(' type_list_opt . ')' ARROW type

    ')'  shift, and go to state 32


State 23

   54 type_list_opt: type_list .

    $default  reduce using rule 54 (type_list_opt)


State 24

   57 declaration: type IDENTIFIER ';' .

    $default  reduce using rule 57 (declaration)


State 25

   64 function: IDENTIFIER '(' . parameter_list_opt ')' ':' type '{' declaration_list statement_list RETURN expression ';' '}'

    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 60 (parameter_list_opt)

    parameter_list_opt  go to state 34
    parameter_list      go to state 35


State 26

   66 function_list: function function_list .

    $default  reduce using rule 66 (function_list)


State 27

   67 main_function: MAIN . '{' declaration_list statement_list RETURN expression ';' '}'

    '{'  shift, and go to state 36


State 28

    1 program: declaration_list function_list main_function .

    $default  reduce using rule 1 (program)


State 29

   51 type: ARRAY '<' INT_CONSTANT ',' . type '>'

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    type  go to state 37


State 30

   50 type: POINTER '<' type '>' .

    $default  reduce using rule 50 (type)


State 31

   56 type_list: type ',' . type_list

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    type       go to state 21
    type_list  go to state 38


State 32

   52 type: FUNCTION '(' type_list_opt ')' . ARROW type

    ARROW  shift, and go to state 39


State 33

   62 parameter_list: IDENTIFIER .
   63               | IDENTIFIER . ',' parameter_list

    ','  shift, and go to state 40

    $default  reduce using rule 62 (parameter_list)


State 34

   64 function: IDENTIFIER '(' parameter_list_opt . ')' ':' type '{' declaration_list statement_list RETURN expression ';' '}'

    ')'  shift, and go to state 41


State 35

   61 parameter_list_opt: parameter_list .

    $default  reduce using rule 61 (parameter_list_opt)


State 36

   67 main_function: MAIN '{' . declaration_list statement_list RETURN expression ';' '}'

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $default  reduce using rule 58 (declaration_list)

    type              go to state 7
    declaration       go to state 8
    declaration_list  go to state 42


State 37

   51 type: ARRAY '<' INT_CONSTANT ',' type . '>'

    '>'  shift, and go to state 43


State 38

   56 type_list: type ',' type_list .

    $default  reduce using rule 56 (type_list)


State 39

   52 type: FUNCTION '(' type_list_opt ')' ARROW . type

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    type  go to state 44


State 40

   63 parameter_list: IDENTIFIER ',' . parameter_list

    IDENTIFIER  shift, and go to state 33

    parameter_list  go to state 45


State 41

   64 function: IDENTIFIER '(' parameter_list_opt ')' . ':' type '{' declaration_list statement_list RETURN expression ';' '}'

    ':'  shift, and go to state 46


State 42

   67 main_function: MAIN '{' declaration_list . statement_list RETURN expression ';' '}'

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    IF              shift, and go to state 52
    WHILE           shift, and go to state 53
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58
    '{'             shift, and go to state 59

    $default  reduce using rule 46 (statement_list)

    primary_expression    go to state 60
    postfix_expression    go to state 61
    unary_expression      go to state 62
    unary_operator        go to state 63
    expression            go to state 64
    assignment_statement  go to state 65
    if_statement          go to state 66
    while_statement       go to state 67
    compound_statement    go to state 68
    statement             go to state 69
    statement_list        go to state 70


State 43

   51 type: ARRAY '<' INT_CONSTANT ',' type '>' .

    $default  reduce using rule 51 (type)


State 44

   52 type: FUNCTION '(' type_list_opt ')' ARROW type .

    $default  reduce using rule 52 (type)


State 45

   63 parameter_list: IDENTIFIER ',' parameter_list .

    $default  reduce using rule 63 (parameter_list)


State 46

   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' . type '{' declaration_list statement_list RETURN expression ';' '}'

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    type  go to state 71


State 47

    2 primary_expression: IDENTIFIER .
    3                   | IDENTIFIER . '(' argument_list_opt ')'

    '('  shift, and go to state 72

    $default  reduce using rule 2 (primary_expression)


State 48

    4 primary_expression: HEX_CONSTANT .

    $default  reduce using rule 4 (primary_expression)


State 49

    5 primary_expression: INT_CONSTANT .

    $default  reduce using rule 5 (primary_expression)


State 50

    6 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 6 (primary_expression)


State 51

    7 primary_expression: STRING_LITERAL .

    $default  reduce using rule 7 (primary_expression)


State 52

   38 if_statement: IF . '(' expression ')' statement
   39             | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 73


State 53

   40 while_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 74


State 54

   20 unary_operator: '-' .

    $default  reduce using rule 20 (unary_operator)


State 55

   19 unary_operator: '*' .

    $default  reduce using rule 19 (unary_operator)


State 56

    8 primary_expression: '(' . expression ')'
   17 unary_expression: '(' . type ')' unary_expression

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    CHAR            shift, and go to state 1
    INT             shift, and go to state 2
    ARRAY           shift, and go to state 3
    POINTER         shift, and go to state 4
    FUNCTION        shift, and go to state 5
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 62
    unary_operator      go to state 63
    expression          go to state 75
    type                go to state 76


State 57

   18 unary_operator: '&' .

    $default  reduce using rule 18 (unary_operator)


State 58

   21 unary_operator: '!' .

    $default  reduce using rule 21 (unary_operator)


State 59

   41 compound_statement: '{' . declaration_list statement_list '}'

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $default  reduce using rule 58 (declaration_list)

    type              go to state 7
    declaration       go to state 8
    declaration_list  go to state 77


State 60

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


State 61

   10 postfix_expression: postfix_expression . '[' expression ']'
   15 unary_expression: postfix_expression .

    '['  shift, and go to state 78

    $default  reduce using rule 15 (unary_expression)


State 62

   22 expression: unary_expression .

    $default  reduce using rule 22 (expression)


State 63

   16 unary_expression: unary_operator . unary_expression

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 79
    unary_operator      go to state 63


State 64

   23 expression: expression . binary_operator unary_expression
   37 assignment_statement: expression . '=' expression ';'

    LE_OP   shift, and go to state 80
    GE_OP   shift, and go to state 81
    EQ_OP   shift, and go to state 82
    NE_OP   shift, and go to state 83
    AND_OP  shift, and go to state 84
    OR_OP   shift, and go to state 85
    '-'     shift, and go to state 86
    '+'     shift, and go to state 87
    '*'     shift, and go to state 88
    '/'     shift, and go to state 89
    '%'     shift, and go to state 90
    '<'     shift, and go to state 91
    '>'     shift, and go to state 92
    '='     shift, and go to state 93

    binary_operator  go to state 94


State 65

   42 statement: assignment_statement .

    $default  reduce using rule 42 (statement)


State 66

   43 statement: if_statement .

    $default  reduce using rule 43 (statement)


State 67

   44 statement: while_statement .

    $default  reduce using rule 44 (statement)


State 68

   45 statement: compound_statement .

    $default  reduce using rule 45 (statement)


State 69

   47 statement_list: statement . statement_list

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    IF              shift, and go to state 52
    WHILE           shift, and go to state 53
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58
    '{'             shift, and go to state 59

    $default  reduce using rule 46 (statement_list)

    primary_expression    go to state 60
    postfix_expression    go to state 61
    unary_expression      go to state 62
    unary_operator        go to state 63
    expression            go to state 64
    assignment_statement  go to state 65
    if_statement          go to state 66
    while_statement       go to state 67
    compound_statement    go to state 68
    statement             go to state 69
    statement_list        go to state 95


State 70

   67 main_function: MAIN '{' declaration_list statement_list . RETURN expression ';' '}'

    RETURN  shift, and go to state 96


State 71

   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' type . '{' declaration_list statement_list RETURN expression ';' '}'

    '{'  shift, and go to state 97


State 72

    3 primary_expression: IDENTIFIER '(' . argument_list_opt ')'

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    $default  reduce using rule 11 (argument_list_opt)

    primary_expression  go to state 60
    postfix_expression  go to state 61
    argument_list_opt   go to state 98
    argument_list       go to state 99
    unary_expression    go to state 62
    unary_operator      go to state 63
    expression          go to state 100


State 73

   38 if_statement: IF '(' . expression ')' statement
   39             | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 62
    unary_operator      go to state 63
    expression          go to state 101


State 74

   40 while_statement: WHILE '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 62
    unary_operator      go to state 63
    expression          go to state 102


State 75

    8 primary_expression: '(' expression . ')'
   23 expression: expression . binary_operator unary_expression

    LE_OP   shift, and go to state 80
    GE_OP   shift, and go to state 81
    EQ_OP   shift, and go to state 82
    NE_OP   shift, and go to state 83
    AND_OP  shift, and go to state 84
    OR_OP   shift, and go to state 85
    '-'     shift, and go to state 86
    '+'     shift, and go to state 87
    '*'     shift, and go to state 88
    '/'     shift, and go to state 89
    '%'     shift, and go to state 90
    '<'     shift, and go to state 91
    '>'     shift, and go to state 92
    ')'     shift, and go to state 103

    binary_operator  go to state 94


State 76

   17 unary_expression: '(' type . ')' unary_expression

    ')'  shift, and go to state 104


State 77

   41 compound_statement: '{' declaration_list . statement_list '}'

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    IF              shift, and go to state 52
    WHILE           shift, and go to state 53
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58
    '{'             shift, and go to state 59

    $default  reduce using rule 46 (statement_list)

    primary_expression    go to state 60
    postfix_expression    go to state 61
    unary_expression      go to state 62
    unary_operator        go to state 63
    expression            go to state 64
    assignment_statement  go to state 65
    if_statement          go to state 66
    while_statement       go to state 67
    compound_statement    go to state 68
    statement             go to state 69
    statement_list        go to state 105


State 78

   10 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 62
    unary_operator      go to state 63
    expression          go to state 106


State 79

   16 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 16 (unary_expression)


State 80

   31 binary_operator: LE_OP .

    $default  reduce using rule 31 (binary_operator)


State 81

   32 binary_operator: GE_OP .

    $default  reduce using rule 32 (binary_operator)


State 82

   33 binary_operator: EQ_OP .

    $default  reduce using rule 33 (binary_operator)


State 83

   34 binary_operator: NE_OP .

    $default  reduce using rule 34 (binary_operator)


State 84

   35 binary_operator: AND_OP .

    $default  reduce using rule 35 (binary_operator)


State 85

   36 binary_operator: OR_OP .

    $default  reduce using rule 36 (binary_operator)


State 86

   28 binary_operator: '-' .

    $default  reduce using rule 28 (binary_operator)


State 87

   27 binary_operator: '+' .

    $default  reduce using rule 27 (binary_operator)


State 88

   24 binary_operator: '*' .

    $default  reduce using rule 24 (binary_operator)


State 89

   25 binary_operator: '/' .

    $default  reduce using rule 25 (binary_operator)


State 90

   26 binary_operator: '%' .

    $default  reduce using rule 26 (binary_operator)


State 91

   29 binary_operator: '<' .

    $default  reduce using rule 29 (binary_operator)


State 92

   30 binary_operator: '>' .

    $default  reduce using rule 30 (binary_operator)


State 93

   37 assignment_statement: expression '=' . expression ';'

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 62
    unary_operator      go to state 63
    expression          go to state 107


State 94

   23 expression: expression binary_operator . unary_expression

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 108
    unary_operator      go to state 63


State 95

   47 statement_list: statement statement_list .

    $default  reduce using rule 47 (statement_list)


State 96

   67 main_function: MAIN '{' declaration_list statement_list RETURN . expression ';' '}'

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 62
    unary_operator      go to state 63
    expression          go to state 109


State 97

   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' type '{' . declaration_list statement_list RETURN expression ';' '}'

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    ARRAY     shift, and go to state 3
    POINTER   shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $default  reduce using rule 58 (declaration_list)

    type              go to state 7
    declaration       go to state 8
    declaration_list  go to state 110


State 98

    3 primary_expression: IDENTIFIER '(' argument_list_opt . ')'

    ')'  shift, and go to state 111


State 99

   12 argument_list_opt: argument_list .

    $default  reduce using rule 12 (argument_list_opt)


State 100

   13 argument_list: expression .
   14              | expression . ',' argument_list
   23 expression: expression . binary_operator unary_expression

    LE_OP   shift, and go to state 80
    GE_OP   shift, and go to state 81
    EQ_OP   shift, and go to state 82
    NE_OP   shift, and go to state 83
    AND_OP  shift, and go to state 84
    OR_OP   shift, and go to state 85
    '-'     shift, and go to state 86
    '+'     shift, and go to state 87
    '*'     shift, and go to state 88
    '/'     shift, and go to state 89
    '%'     shift, and go to state 90
    '<'     shift, and go to state 91
    '>'     shift, and go to state 92
    ','     shift, and go to state 112

    $default  reduce using rule 13 (argument_list)

    binary_operator  go to state 94


State 101

   23 expression: expression . binary_operator unary_expression
   38 if_statement: IF '(' expression . ')' statement
   39             | IF '(' expression . ')' statement ELSE statement

    LE_OP   shift, and go to state 80
    GE_OP   shift, and go to state 81
    EQ_OP   shift, and go to state 82
    NE_OP   shift, and go to state 83
    AND_OP  shift, and go to state 84
    OR_OP   shift, and go to state 85
    '-'     shift, and go to state 86
    '+'     shift, and go to state 87
    '*'     shift, and go to state 88
    '/'     shift, and go to state 89
    '%'     shift, and go to state 90
    '<'     shift, and go to state 91
    '>'     shift, and go to state 92
    ')'     shift, and go to state 113

    binary_operator  go to state 94


State 102

   23 expression: expression . binary_operator unary_expression
   40 while_statement: WHILE '(' expression . ')' statement

    LE_OP   shift, and go to state 80
    GE_OP   shift, and go to state 81
    EQ_OP   shift, and go to state 82
    NE_OP   shift, and go to state 83
    AND_OP  shift, and go to state 84
    OR_OP   shift, and go to state 85
    '-'     shift, and go to state 86
    '+'     shift, and go to state 87
    '*'     shift, and go to state 88
    '/'     shift, and go to state 89
    '%'     shift, and go to state 90
    '<'     shift, and go to state 91
    '>'     shift, and go to state 92
    ')'     shift, and go to state 114

    binary_operator  go to state 94


State 103

    8 primary_expression: '(' expression ')' .

    $default  reduce using rule 8 (primary_expression)


State 104

   17 unary_expression: '(' type ')' . unary_expression

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 115
    unary_operator      go to state 63


State 105

   41 compound_statement: '{' declaration_list statement_list . '}'

    '}'  shift, and go to state 116


State 106

   10 postfix_expression: postfix_expression '[' expression . ']'
   23 expression: expression . binary_operator unary_expression

    LE_OP   shift, and go to state 80
    GE_OP   shift, and go to state 81
    EQ_OP   shift, and go to state 82
    NE_OP   shift, and go to state 83
    AND_OP  shift, and go to state 84
    OR_OP   shift, and go to state 85
    '-'     shift, and go to state 86
    '+'     shift, and go to state 87
    '*'     shift, and go to state 88
    '/'     shift, and go to state 89
    '%'     shift, and go to state 90
    '<'     shift, and go to state 91
    '>'     shift, and go to state 92
    ']'     shift, and go to state 117

    binary_operator  go to state 94


State 107

   23 expression: expression . binary_operator unary_expression
   37 assignment_statement: expression '=' expression . ';'

    LE_OP   shift, and go to state 80
    GE_OP   shift, and go to state 81
    EQ_OP   shift, and go to state 82
    NE_OP   shift, and go to state 83
    AND_OP  shift, and go to state 84
    OR_OP   shift, and go to state 85
    '-'     shift, and go to state 86
    '+'     shift, and go to state 87
    '*'     shift, and go to state 88
    '/'     shift, and go to state 89
    '%'     shift, and go to state 90
    '<'     shift, and go to state 91
    '>'     shift, and go to state 92
    ';'     shift, and go to state 118

    binary_operator  go to state 94


State 108

   23 expression: expression binary_operator unary_expression .

    $default  reduce using rule 23 (expression)


State 109

   23 expression: expression . binary_operator unary_expression
   67 main_function: MAIN '{' declaration_list statement_list RETURN expression . ';' '}'

    LE_OP   shift, and go to state 80
    GE_OP   shift, and go to state 81
    EQ_OP   shift, and go to state 82
    NE_OP   shift, and go to state 83
    AND_OP  shift, and go to state 84
    OR_OP   shift, and go to state 85
    '-'     shift, and go to state 86
    '+'     shift, and go to state 87
    '*'     shift, and go to state 88
    '/'     shift, and go to state 89
    '%'     shift, and go to state 90
    '<'     shift, and go to state 91
    '>'     shift, and go to state 92
    ';'     shift, and go to state 119

    binary_operator  go to state 94


State 110

   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' type '{' declaration_list . statement_list RETURN expression ';' '}'

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    IF              shift, and go to state 52
    WHILE           shift, and go to state 53
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58
    '{'             shift, and go to state 59

    $default  reduce using rule 46 (statement_list)

    primary_expression    go to state 60
    postfix_expression    go to state 61
    unary_expression      go to state 62
    unary_operator        go to state 63
    expression            go to state 64
    assignment_statement  go to state 65
    if_statement          go to state 66
    while_statement       go to state 67
    compound_statement    go to state 68
    statement             go to state 69
    statement_list        go to state 120


State 111

    3 primary_expression: IDENTIFIER '(' argument_list_opt ')' .

    $default  reduce using rule 3 (primary_expression)


State 112

   14 argument_list: expression ',' . argument_list

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    argument_list       go to state 121
    unary_expression    go to state 62
    unary_operator      go to state 63
    expression          go to state 100


State 113

   38 if_statement: IF '(' expression ')' . statement
   39             | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    IF              shift, and go to state 52
    WHILE           shift, and go to state 53
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58
    '{'             shift, and go to state 59

    primary_expression    go to state 60
    postfix_expression    go to state 61
    unary_expression      go to state 62
    unary_operator        go to state 63
    expression            go to state 64
    assignment_statement  go to state 65
    if_statement          go to state 66
    while_statement       go to state 67
    compound_statement    go to state 68
    statement             go to state 122


State 114

   40 while_statement: WHILE '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    IF              shift, and go to state 52
    WHILE           shift, and go to state 53
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58
    '{'             shift, and go to state 59

    primary_expression    go to state 60
    postfix_expression    go to state 61
    unary_expression      go to state 62
    unary_operator        go to state 63
    expression            go to state 64
    assignment_statement  go to state 65
    if_statement          go to state 66
    while_statement       go to state 67
    compound_statement    go to state 68
    statement             go to state 123


State 115

   17 unary_expression: '(' type ')' unary_expression .

    $default  reduce using rule 17 (unary_expression)


State 116

   41 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 41 (compound_statement)


State 117

   10 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 10 (postfix_expression)


State 118

   37 assignment_statement: expression '=' expression ';' .

    $default  reduce using rule 37 (assignment_statement)


State 119

   67 main_function: MAIN '{' declaration_list statement_list RETURN expression ';' . '}'

    '}'  shift, and go to state 124


State 120

   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' type '{' declaration_list statement_list . RETURN expression ';' '}'

    RETURN  shift, and go to state 125


State 121

   14 argument_list: expression ',' argument_list .

    $default  reduce using rule 14 (argument_list)


State 122

   38 if_statement: IF '(' expression ')' statement .
   39             | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 126

    ELSE      [reduce using rule 38 (if_statement)]
    $default  reduce using rule 38 (if_statement)


State 123

   40 while_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 40 (while_statement)


State 124

   67 main_function: MAIN '{' declaration_list statement_list RETURN expression ';' '}' .

    $default  reduce using rule 67 (main_function)


State 125

   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' type '{' declaration_list statement_list RETURN . expression ';' '}'

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58

    primary_expression  go to state 60
    postfix_expression  go to state 61
    unary_expression    go to state 62
    unary_operator      go to state 63
    expression          go to state 127


State 126

   39 if_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER      shift, and go to state 47
    HEX_CONSTANT    shift, and go to state 48
    INT_CONSTANT    shift, and go to state 49
    CHAR_CONSTANT   shift, and go to state 50
    STRING_LITERAL  shift, and go to state 51
    IF              shift, and go to state 52
    WHILE           shift, and go to state 53
    '-'             shift, and go to state 54
    '*'             shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '!'             shift, and go to state 58
    '{'             shift, and go to state 59

    primary_expression    go to state 60
    postfix_expression    go to state 61
    unary_expression      go to state 62
    unary_operator        go to state 63
    expression            go to state 64
    assignment_statement  go to state 65
    if_statement          go to state 66
    while_statement       go to state 67
    compound_statement    go to state 68
    statement             go to state 128


State 127

   23 expression: expression . binary_operator unary_expression
   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' type '{' declaration_list statement_list RETURN expression . ';' '}'

    LE_OP   shift, and go to state 80
    GE_OP   shift, and go to state 81
    EQ_OP   shift, and go to state 82
    NE_OP   shift, and go to state 83
    AND_OP  shift, and go to state 84
    OR_OP   shift, and go to state 85
    '-'     shift, and go to state 86
    '+'     shift, and go to state 87
    '*'     shift, and go to state 88
    '/'     shift, and go to state 89
    '%'     shift, and go to state 90
    '<'     shift, and go to state 91
    '>'     shift, and go to state 92
    ';'     shift, and go to state 129

    binary_operator  go to state 94


State 128

   39 if_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 39 (if_statement)


State 129

   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' type '{' declaration_list statement_list RETURN expression ';' . '}'

    '}'  shift, and go to state 130


State 130

   64 function: IDENTIFIER '(' parameter_list_opt ')' ':' type '{' declaration_list statement_list RETURN expression ';' '}' .

    $default  reduce using rule 64 (function)
